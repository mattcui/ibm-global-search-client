{
  "openapi": "3.0.0",
  "info": {
    "description": "Search for resources with the global and shared resource properties repository integrated in the IBM Cloud platform. The search repository stores and searches cloud resources attributes, which categorize or classify resources. A resource is a physical or logical component that can be created or reserved for an application or service instance and is owned by resource providers, such as Cloud Foundry, IBM Kubernetes Service, or resource controller in IBM Cloud. Resources are uniquely identified by a Cloud Resource Name (CRN)  or by an IMS ID. The properties of a resource include tags and system properties. Both properties are defined in an IBM Cloud billing account, and span across many regions.",
    "version": "2.0.1",
    "title": "Global Search",
    "x-alternate-name": "global_search",
    "termsOfService": "https://",
    "license": {
      "name": "This product includes software originally developed by IBM Corporation, Copyright 2016-2019 IBM Corp.",
      "url": "https://www.ibm.com/legal/us/en/copytrade.shtml"
    },
    "x-ibm-name": "global-searching-and-tagging-api-specification",
    "x-codegen-config": {
      "java": {
        "apiPackage": "com.ibm.cloud.platform_services"
      },
      "go": {
        "apiPackage": "github.com/IBM/platform-services-go-sdk",
        "improvedNameFormattingV2": true
      },
      "python": {
        "apiPackage": "ibm_platform_services"
      }
    },
    "x-sdk-supported-languages": [
      "curl",
      "go",
      "java",
      "node",
      "python"
    ],
    "x-last-updated": "2021-06-23"
  },
  "servers": [
    {
      "url": "https://api.global-search-tagging.cloud.ibm.com"
    }
  ],
  "security": [
    {
      "IAM": []
    }
  ],
  "tags": [
    {
      "name": "Search",
      "description": "Operations for finding resources"
    },
    {
      "name": "Resource Types",
      "description": "Operations for resource types"
    }
  ],
  "paths": {
    "/v2/resources/search": {
      "post": {
        "x-swagger-router-controller": "swagger_controllers",
        "x-sdk-exclude": true,
        "operationId": "v2_search",
        "x-ibm-permissions": {
          "actions": [
            {
              "name": "global-search-tagging.resource.read"
            }
          ]
        },
        "tags": [
          "Search"
        ],
        "summary": "Find instances of resources (v2)",
        "description": "Find resources in the internal search platform for a specific account\nID. You can optionally apply query strings. To filter results, you can insert\na string using the Lucene syntax and the query string is parsed into a series\nof terms and operators. A term can be a single word or a phrase, in which\ncase the search is performed for all the words, in the same order. To filter\nfor a specific value regardless of the property that contains it, use an asterisk\nas the key name. Results are filtered by the account ID and IAM subsystem.\nOnly resources that belong to the account ID and that are accessible by the\nclient are returned.\nThe usage of this API is deprecated for cases when the provider is not specified or \n`provider=ghost`. \n`/v3/resources/search` replaces this API for the deprecated cases.",
        "parameters": [
          {
            "$ref": "#/components/parameters/transaction-id"
          },
          {
            "$ref": "#/components/parameters/account_id"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/timeout"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "The offset is the index of the item you want to start returning data from. Default is 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Comma separated properties name used for sorting",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "provider",
            "required": false,
            "description": "Search providers. Supported values are `ghost` and `ims`. If not specified, the defaults to `ghost`. Specify a single provider.",
            "schema": {
              "type": "string",
              "enum": [
                "ghost",
                "ims"
              ],
              "default": "ghost"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchBody"
              }
            }
          },
          "description": "It contains the query filters, the list of fields to be returned, and the search token (initally set to null or undefined)",
          "required": true
        },
        "x-codegen-request-body-name": "body",
        "responses": {
          "200": {
            "description": "A result paging with the list of resources matching the provided filters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                },
                "examples": {
                  "response": {
                    "value": {
                      "items": {
                        "...": "STRING",
                        "crn": "STRING"
                      },
                      "more_data": "BOOLEAN",
                      "token": "STRING"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized / Wrong auth token type IAM / Auth token not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error / IAM not initialized / Malformed IAM credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "502": {
            "description": "Search IAM error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "default": {
            "description": "System problem or unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        }
      }
    },
    "/v3/resources/search": {
      "post": {
        "x-swagger-router-controller": "swagger_controllers",
        "operationId": "search",
        "x-ibm-permissions": {
          "actions": [
            {
              "name": "global-search-tagging.resource.read"
            }
          ]
        },
        "tags": [
          "Search"
        ],
        "summary": "Find instances of resources (v3)",
        "description": "Find Cloud Foundry resources, IAM-enabled resources, or \nstorage and network resources running on classic infrastructure in a \nspecific account ID. You can apply query strings if necessary. \n\nTo filter results, you can insert a string using the Lucene syntax and the \nquery string is parsed into a series of terms and operators. A term can be \na single word or a phrase, in which case the search is performed for all \nthe words, in the same order. To filter for a specific value regardless of \nthe property that contains it, type the search term without specifying a \nfield. Only resources that belong to the account ID and that are accessible \nby the client are returned. \n\nYou must use `/v3/resources/search` when you need to fetch more than `10000` \nresource items. The `/v2/resources/search` prohibits paginating through such \na big number. On the first call, the operation returns a live cursor on the \ndata that you must use on all the subsequent calls to get the next batch of \nresults until you get the empty result set. By default, the fields returned \nfor every resource are \"crn\", \"name\", \"family\", \"type\", and \"account_id\". You \ncan specify the subset of the fields you want in your request.",
        "parameters": [
          {
            "$ref": "#/components/parameters/transaction-id"
          },
          {
            "$ref": "#/components/parameters/account_id"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/timeout"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanBody"
              }
            }
          },
          "description": "It contains the query filters on the first operation call, or the search_cursor on next calls. On subsequent calls, set the `search_cursor` to the value returned by the previous call. After the first, you must set only the `search_cursor`. Any other parameter but the `search_cursor` will be ignored. The `search_cursor` encodes all the information needed to get the next batch of `limit` data.",
          "required": true
        },
        "x-codegen-request-body-name": "body",
        "responses": {
          "200": {
            "description": "A result paging with the list of resources matching the provided filters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized / Wrong auth token type IAM / Auth token not valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error / IAM not initialized / Malformed IAM credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "502": {
            "description": "Search IAM error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          },
          "default": {
            "description": "System problem or unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X POST --header \"Authorization: Bearer {iam_token}\" \\\n",
                      "  --header \"Accept: application/json\" \\\n",
                      "  --header \"Content-Type: application/json\" \\\n",
                      "  -d '{\"query\": \"GST-sdk-*\", \"fields\": [\"*\"]}' \\\n",
                      "  \"{base_url}/v3/resources/search\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "searchOptions := globalSearchService.NewSearchOptions()\n",
                      "searchOptions.SetLimit(10)\n",
                      "searchOptions.SetQuery(\"GST-sdk-*\")\n",
                      "searchOptions.SetFields([]string{\"*\"})\n",
                      "\n",
                      "scanResult, response, err := globalSearchService.Search(searchOptions)\n",
                      "if err != nil {\n",
                      "  panic(err)\n",
                      "}\n",
                      "b, _ := json.MarshalIndent(scanResult, \"\", \"  \")\n",
                      "fmt.Println(string(b))"
                    ]
                  }
                ]
              }
            ],
            "java": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "SearchOptions searchOptions = new SearchOptions.Builder()\n",
                      "  .query(\"GST-sdk-*\")\n",
                      "  .fields(new java.util.ArrayList<String>(java.util.Arrays.asList(\"*\")))\n",
                      "  .searchCursor(searchCursor)\n",
                      "  .build();\n",
                      "\n",
                      "Response<ScanResult> response = service.search(searchOptions).execute();\n",
                      "ScanResult scanResult = response.getResult();\n",
                      "\n",
                      "System.out.println(scanResult);"
                    ]
                  }
                ]
              }
            ],
            "node": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "const params = {\n",
                      "  query: 'GST-sdk-*',\n",
                      "  fields: ['*'],\n",
                      "  searchCursor: searchCursor,\n",
                      "};\n",
                      "\n",
                      "globalSearchService.search(params)\n",
                      "  .then(res => {\n",
                      "    console.log(JSON.stringify(res.result, null, 2));\n",
                      "  })\n",
                      "  .catch(err => {\n",
                      "    console.warn(err)\n",
                      "  });"
                    ]
                  }
                ]
              }
            ],
            "python": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "response = global_search_service.search(query='GST-sdk-*',\n",
                      "                    fields=['*'])\n",
                      "scan_result = response.get_result()\n",
                      "\n",
                      "print(json.dumps(scan_result, indent=2))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v2/resources/supported_types": {
      "get": {
        "tags": [
          "Resource Types"
        ],
        "summary": "DEPRECATED. Get all GhoST indices.",
        "description": "Retrieves a list of all GhoST indices.",
        "operationId": "get_supported_types",
        "deprecated": true,
        "responses": {
          "200": {
            "description": "Get all GhoST indices.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupportedTypesList"
                }
              }
            }
          },
          "default": {
            "description": "System problem or unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Errors"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET --header \"Authorization: Bearer {iam_token}\" \\\n",
                      "  --header \"Accept: application/json\" \\\n",
                      "  \"{base_url}/v2/resources/supported_types\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "getSupportedTypesOptions := globalSearchService.NewGetSupportedTypesOptions()\n",
                      "\n",
                      "supportedTypesList, response, err := globalSearchService.GetSupportedTypes(getSupportedTypesOptions)\n",
                      "if err != nil {\n",
                      "  panic(err)\n",
                      "}\n",
                      "b, _ := json.MarshalIndent(supportedTypesList, \"\", \"  \")\n",
                      "fmt.Println(string(b))"
                    ]
                  }
                ]
              }
            ],
            "java": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "GetSupportedTypesOptions getSupportedTypesOptions = new GetSupportedTypesOptions();\n",
                      "\n",
                      "Response<SupportedTypesList> response = service.getSupportedTypes(getSupportedTypesOptions).execute();\n",
                      "SupportedTypesList supportedTypesList = response.getResult();\n",
                      "\n",
                      "System.out.println(supportedTypesList);"
                    ]
                  }
                ]
              }
            ],
            "node": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "globalSearchService.getSupportedTypes({})\n",
                      "  .then(res => {\n",
                      "    console.log(JSON.stringify(res.result, null, 2));\n",
                      "  })\n",
                      "  .catch(err => {\n",
                      "    console.warn(err)\n",
                      "  });"
                    ]
                  }
                ]
              }
            ],
            "python": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "supported_types_list = global_search_service.get_supported_types(\n",
                      ").get_result()\n",
                      "\n",
                      "print(json.dumps(supported_types_list, indent=2))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    }
  },
  "x-aes-category": {
    "bluemixList": [
      "Bluemix Platform"
    ],
    "namespaceList": [
      "bluemix"
    ],
    "technologyList": [
      "bluemix"
    ]
  },
  "x-aes-documentation": {
    "customized-codesnippet": [],
    "externalInfo": {},
    "externalLinks": []
  },
  "x-aes-provider": {
    "apiStatus": "DRAFT",
    "companyName": "IBM",
    "enableTryItOut": "NO",
    "languagelist": [
      "java",
      "javascript_jquery",
      "node",
      "python",
      "shell_curl"
    ],
    "namespaceList": [
      "bluemix"
    ],
    "productImage": "",
    "providerEmail": "francesca.bonifazi@it.ibm.com",
    "serviceStatus": "STAGE_BETA",
    "sumfindByProperties bodymary": "REST API specification for the Search service",
    "uniqueShortName": "Global_Searching_and_Tagging_API_Specification"
  },
  "x-ibm-configuration": {
    "enforced": false,
    "testable": true,
    "phase": "realized",
    "cors": {
      "enabled": true
    }
  },
  "components": {
    "parameters": {
      "transaction-id": {
        "in": "header",
        "name": "transaction-id",
        "description": "An aplhanumeric string that can be used to trace a request across services. If not specified it will be automatically generated with the prefix \"gst-\"",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "account_id": {
        "in": "query",
        "name": "account_id",
        "description": "The account ID to filter resources.",
        "required": false,
        "schema": {
          "type": "string",
          "pattern": "^[a-fA-F0-9-]+$|^[*]{1}$"
        }
      },
      "timeout": {
        "in": "query",
        "name": "timeout",
        "description": "A search timeout, bounding the search request to be executed within the specified time value and bail with the hits accumulated up to that point when expired. Defaults to the system defined timeout.",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "maximum": 600000,
          "default": 0
        }
      },
      "sort": {
        "in": "query",
        "name": "sort",
        "description": "Comma separated properties names used for sorting",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[+-]?\\w+[\\w\\-\\.]*$"
          }
        }
      },
      "limit": {
        "in": "query",
        "name": "limit",
        "description": "The maximum number of hits to return. Defaults to 10.",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1000,
          "default": 10
        }
      }
    },
    "securitySchemes": {
      "IAM": {
        "description": "A valid IAM token. Remember to add the 'bearer' prefix to the token",
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "Error": {
        "description": "Error encountered in processing in the request",
        "type": "object",
        "properties": {
          "code": {
            "description": "A code that identifies the error.",
            "type": "string"
          },
          "description": {
            "description": "A description of the solution to the error.",
            "type": "string"
          },
          "level": {
            "description": "The severity level of the error.",
            "type": "string",
            "enum": [
              "error",
              "warning",
              "info"
            ]
          },
          "message": {
            "description": "A description of the error detected in the request.",
            "type": "string"
          },
          "more_info": {
            "description": "The location of additional information about the error.",
            "type": "string"
          },
          "response": {
            "description": "The response received for the request.",
            "type": "string"
          }
        }
      },
      "Errors": {
        "description": "Error response",
        "properties": {
          "errors": {
            "description": "List of errors encountered in processing the request",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "example": {
          "code": "STRING",
          "description": "STRING",
          "level": "STRING",
          "message": "STRING",
          "more_info": "STRING",
          "response": "STRING"
        }
      },
      "SearchResults": {
        "description": "The results of the requested search.",
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "The array of results. Each item will represent a resource and will contains all visible properties associated with it.",
            "items": {
              "$ref": "#/components/schemas/ResultItem"
            }
          },
          "more_data": {
            "type": "boolean",
            "description": "If false, there is no more data to retrieve on the next page. If true, it's possible that there is more data to retrieve on the next page."
          },
          "token": {
            "type": "string",
            "description": "The search token to use on the next call."
          },
          "filter_error": {
            "description": "It is set to true if the result is partial of an IAM error when validating user authorization on one or more resources. This field is DEPRECATED and will be removed in future versions of this API",
            "type": "boolean"
          },
          "partial_data": {
            "description": "Indicates if the result that is set might be partial or not. Value 0 means the result set is complete. A value greater than 0 means the result set might be incomplete. Its single bits identify the cause. The first bit means the error is in the IAM filter. The second bit means errors are in elasticsearch shards.",
            "type": "integer"
          },
          "offset": {
            "description": "Offset parameter specified by the user",
            "type": "integer"
          },
          "limit": {
            "description": "Limit parameter specified by the user",
            "type": "integer"
          }
        },
        "required": [
          "more_data",
          "items",
          "filter_error",
          "partial_data",
          "offset",
          "limit"
        ]
      },
      "ResultItem": {
        "description": "A resource returned in a search result",
        "type": "object",
        "properties": {
          "crn": {
            "type": "string",
            "description": "Resource identifier in CRN format."
          }
        },
        "additionalProperties": true
      },
      "SearchBody": {
        "description": "search body",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "query": {
            "description": "The query string",
            "type": "string",
            "items": {
              "type": "string"
            }
          },
          "fields": {
            "description": "The list of the fields that are returned by the search. The CRN is always returned.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "token": {
            "description": "An opaque token. Initially set to null or undefined, then pass the value returned by the previous call",
            "type": "string"
          }
        },
        "required": [
          "query"
        ]
      },
      "ScanBody": {
        "description": "The request body associated with a search request.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "query": {
            "description": "The Lucene-formatted query string. Default to '*' if not set",
            "type": "string"
          },
          "fields": {
            "description": "The list of the fields returned by the search. Defaults to all. `crn` is always returned.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "search_cursor": {
            "description": "An opaque search cursor that is returned on each operation call and that must be set on next call.",
            "type": "string",
            "minLength": 1
          }
        },
        "example": {
          "query": "(region:us-south OR region:us-east) AND (type:cf-application OR type:cf-service-instance)",
          "fields": [
            "crn",
            "doc.*"
          ]
        }
      },
      "ScanResult": {
        "description": "The search scan response",
        "properties": {
          "search_cursor": {
            "description": "The search cursor to use on all calls after the first one.",
            "type": "string",
            "minLength": 1
          },
          "limit": {
            "description": "Value of the limit parameter specified by the user",
            "type": "integer"
          },
          "items": {
            "description": "The array of results. Each item represents a resource. An empty array signals the end of the result set, there are no more hits to fetch",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResultItem"
            }
          }
        },
        "required": [
          "search_cursor",
          "items"
        ]
      },
      "SupportedTypesList": {
        "description": "A list of all GhoST indices.",
        "properties": {
          "supported_types": {
            "description": "A list of all GhoST indices.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}